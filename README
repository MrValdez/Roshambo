Python scripts

trainer.py
 Used to play the tournament, create the CSV and plot the charts.
 
 In the script code, pathbase is used to tell the script where the results will be stored. Note: this string should end with "/".

 The main() function runs the script. It is built this way to allow commenting specific behavior for debugging purposes.
 
 The PlayTournament(size) function plays the tournament. Size refers to the maximum number of variants that will play. From the size variable, the variants are created with values of [1..size+1]. In our modified RoShamBo Test Suite, these variants are then passed via argv. The results are saved into "results %s.txt" where %s is the variant number.
 
 The CreateCSV() function will parse each result and create two csv files with the format: variant variable, rank. The first csv file is for the "Match results" and the second is for the "Tournament results".
 
 The charts.startPlotting() function will create the chart graphics. Refer to charts.py.

parseScore.py
 Used to study how many points (wins-losts-ties) our bot got compared to another bot.

 In the script code, pathbase is used to tell the script where the results will be stored. Note: this string should end with "/".
  
 The format is as follows:
  parseScore.py [botname] [show all results]
  
  [botname] is optional and contains the name of the bot (a part of the bot's name is enough). Does not accept space, use part of the name to circumvent this.
  [show all results] is optional. A value of 1 means the points gained from all variants are shown. Any other values gives the default behavior of not showing the results.
  
 Example:
  To show the results against the Iocaine bot:
   python parseScore.py Iocaine

  To show the results against the RPS 20-20-60 bot:
   python parseScore.py 20-60
        
  To show the results against the RPS 20-20-60 bot and show our bot's scores with different variants:
   python parseScore.py 20-60 1
   
charts.py
 Used to generate a matplot chart from the csv generated by trainer.py
 
 When used from the command prompt, it generates a matplot chart from "results_match.csv" and "results_tournament.csv", and saves it as "results_match.png" and "results_tournament.png"
 
 When imported as a library, you can call the Plot() function. It has the following paramters:
  Plot(filename, title, saveFigure = True)

