The Effectiveness of a modified "Beat Frequent Pick" algorithm in the first International RoShamBo tournament

* Abstract

In this paper, we developed a bot to compete in the first RoShamBo Tournament test suite. We took the basic "Beat Frequent Pick" algorithm supplied with the test suite and improved it by adding a random choice with a bias to the opponent's more frequent pick. In addition, we have added a system of recalculating the frequent picks at specific intervals as deteremined by a training program.

* Introduction

* What is Rock Paper Scissors
\input{What is Rock-Paper-Scissors.tex}

* What is the RoShamBo Tournament
On 1999, Darse Billings announced an AI competition at comp.ai.games. The competition will be a Rock-Paper-Scissors tournament. Competitors will create an AI using C and must supply a program that returns 0, 1 or 2 (respectively rock, paper, scissors). Each AI will compete against all participating AI in a series of 1000 matches. The AI has access to a history of all the moves played in its current match-up.

To encourage development of RPS AI, Darse Billings has requested the authors of the top contending AI to release their source code. This gives the RoShamBo tournament a test suite that testing new bots against.

** RoShamBo Ranking
The RoShamBo tournaments has two ranking system: Tournament results (accumulation of points) and Match results (number of games won).

In accumulation of points, (winning a match gives 1 point. Losing a match gives -1 points. The tournament is set up for 1000 matches).

In number of games won, (a game is won if the bot has at least 51 points; a loss for games with less than zero points; and a draw otherwise).

For the purpose of this paper, we will be looking at the number of games won as our indicator of success.

** Using the first RoShamBo Tournament
For the purpose of this paper, we have chosen to use the first RoShamBo Tournament instead of the latest RoShambo Tournament. The rationale in this is to prevent strategizing against a specific meta that surfaced from the second RoShamBo Tournament. 

It is the observation of this researcher that the later tournament contains bots that is a specific counter to the previous tournament's winning bot. This is due to the open source nature of the tournament in which the source code for the best performing bots are revealed after each tournament. Because of this, most bots were created not for the purpose of pushing the boundary of RoShamBo AI but to win in the RoShamBo Tournament. To be fair, this is a valid strategy but it does not serve the purpose of this researcher. 

Thus, to have a clearer view on winning strategies, we choose the first RoShamBo Tournament where a meta has not yet been formed.

* Define meta

Meta means to "think beyond". A meta-strategy (commonly shortened to meta) is a strategy which take into account the current strategies that are either dominating the game or very common.

For example, in the first RoShamBo tournament, the Iocaine Powder was the winning bot. This has direct influence to new entries in the second RoShamBo. Many of the entries in the second contest were modeled on Iocaine Powder [direct quote. reference RoShamBo website].

When playing to win in a competition, it is necessary for a player to exploit the current meta. However, this can introduce additional complexities to the starting development of a bot: should a researcher develop a bot that aims to win but requires studying the meta, or should a researcher develop the bot in isolation from the meta and then add improvements as dictated by the meta? This researcher has chosen the latter strategy.

* define move

* define round, match, tournament, single-robin tournament

* Define bots

A bot is an artificial player. Bot is an abbreviation for robot. 

AIs are designed to be autonomous. This means that they must decide what move to play without influence from the AI developer. To this end, a computational model is required (citation p. 14).

An AI can follow a predefined set of rules. However, this will make the bot predictable.

* Define AI

Two major approaches have been used to produce strong RoShamBo players: purely statistical techniques, and the "direct history" method [direct quote. reference RoShamBo website].

* Define Strategy and Tactics
Strategy (macro). Tactics (micro).

* Define situations

To have the bot perceive the world, it will need to have access to the game's internal variables that define the world (some calls this the game state [citation or remove]). 

A situation is a set of values that can be recognized by the bot as an event where it has a high probability of predicting the move the opponent will use. Example: there could exist a situation where the opponent will always throw rock. If the bot will recognize this situation, it can counter with paper.

* Define Game knowledge

* Define Domain knowledg

This refers to the bot's explicit knowledge of the world. This can be defined by variables that the bot have access to. In the RoShamBo game environment, these variables are: a history of all the moves performed by both players during the current match, and a variable containing the current turn.

As a computer program, a bot can have access to all the variables the RoShamBo tournament is using if the bot is running in the same computer as the RoShamBo program. As such, a bot can cheat by manipulating the variables. This has been proven in one of the AI that is included in the RoShamBo test suite.

The bot this researcher will develop is meant to push the boundary of Artificial Intelligence and as such, will not be designed to cheat.

* Define learning

When a situation occurs that the bot has not encountered, it can determine if that situation will occur again. If it has determined that the situation can happen in the future, it can add the new situation to its database. This is how AIs learn.

* What is the "Beat Frequent Pick" algorithm?

In the RoShamBo tournament, the Inocencio bot is closest to our reinterpretation of the BFP algorithm. However, while our algorithm calculates the probability over the entire match, the Inocencio bot calculates the probability over a sliding window of its previous n matches (where n is 20). In addition, the Inocencio bot uses entirely random numbers in the first n matches, while our BFP algorithm is consistent with its algorithm throughout.

* The "Beat Frequent Pick" algorithm

One strategy in RPS is to pick uniformly between the three moves. The BFP AI assumes that the opponent is using this strategy. It tracks the oppponent's moves and try to beat the opponent's tendency to use a specific move.

We have added an extra rule for this AI: the AI will not check the current frequency of each move until n amount of turns has passed.

(expand)

* Research Methodology

Create an AI bot and a training program to change the variables in the AI bot. The rankings are recorded and compared to determine the best performing version of the bot.

* Research Questions

Can our BFP variant beat simplistic AI rules?

Is it more effective for our BFP variant to check the current situation immediately or to assess situations after a specific amount of turns?

Can we develop a training program that can modify an AI and check its ranking in the RoShamBo tournament?

Can we use the first RoShamBo tournament as a testing ground for Rock Paper Scissors AI?

* Findings

The best performing variant of BFP has a ranking of n. 

There is a huge difference between the best performing BFP to the next variant. This indicates that the BFP strategy is more effective if it immediately assessed the current situation instead of assessing numerous situations.

* Conclusion

We have also defined some terms that may be useful in future RoShamBo AI bots. These terms are: meta and situations.

* Future Directions

** Building a multi-tiered strategy with BFP as a safe strategy.
A safe strategy is a strategy that can employed when the selected strategy is uncertain. The top ranking RoShamBo Tournament bot, Iocaine Powder, used a safe strategy of playing at random when it is losing within a specific treshold. Playing random is a good strategy as mentioned by (citation).

With the proven effectiveness of the BFP in the first RoShamBo tournament, another AI can be built that uses BFP as its safe strategy.

** Training program
In this paper, we demonstrated how changing one variable has an effect on its overall effectiveness. Future directions can create an external program that feeds an algorithm different values that can effect the behavior and ranking of an AI. For simple AI games (such as RoShamBo which has a small number of rules), a brute-force approach can be used where the games are re-run for every variable changes. 

For more technical AI games (such as chess which has more rules), the training program can re-run the tournament but will fight against simplified AI opponents. To save CPU time, the playing AI can store the situations in which it receives a loss and can be trained against at a time seperate from the game.

** Building a new RoShamBo AI
In this paper, we have a consistent ranking of n. If future researchers are to build AIs that can take part in the RoShamBo tournament, it should be able to perform as good as our BFP variant.

** Applying the BFP to other games
At its core, the BFP is a bot that tries to predict the next move an opponent will play. This can be applied to other competitive games where player has to select a move that can score a point against opposing players. Examples of competitive games are Chess, Poker, Street Fighter, and more. In these games, a player can win by outpredicting and out-strategizing their opponent.

* Acknowledgements

* References

"All models are wrong, but some are useful. -- George Box"